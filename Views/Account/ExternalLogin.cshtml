@model MyScimApp.Models.ExternalLoginModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <title>ExternalLogin</title>
    
    <link href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/bootstrap-social.css" />
    <link rel="stylesheet" href="~/css/customlayout.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

  
</head>
<body>

    <!-- Modal HTML -->
    <div id="myModal">
        <div class="modal-dialog modal-extlogin">
            <div class="modal-content">
                <div class="modal-body">
                    <h3>You have suscessfully logged in with <b class="loginprovider">@Model.LoginProvider</b></h3>
                    <h5>finally you have to regiter your email address as login id.</h5>
                    <form action="/Account/ExternalLogin" method="post" class="form-inline">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()

                        <label>Email address</label>
                        <input type="text" value=@Model.Email name="Email" class="form-control email" spellcheck="false">
                        <input type="submit" class="btn btn-warning" value="Register">
                    </form>


                    <br />
                    <br />
                    <br />
                    <p>Received clams from your identity provider below.</p>
                    <br />

                    @{
                        foreach (var claim in Model.Claims)
                        {
                            <p><b>Type : </b>@claim.Type</p>
                            <p><b>Value : </b>@claim.Value</p>
                            <p><b>Issuer : </b>@claim.Issuer</p>
                            <br />
                        }
                    }


                </div>
            </div>
        </div>
    </div>
</body>
</html>
